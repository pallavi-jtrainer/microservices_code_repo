services:
    auth-db:
        image: mysql:8.0
        container_name: auth-db-container
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: auth_db
            MYSQL_USER: docker_user
            MYSQL_PASSWORD: Pass1234
        ports:
            - "3307:3306"
        volumes:
            - auth_db_data:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pPass1234"]
            interval: 10s
            timeout: 5s
            retries: 5

    product-db:
        image: mysql:8.0
        container_name: product-db-container
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: product_db
            MYSQL_USER: docker_user
            MYSQL_PASSWORD: Pass1234
        ports:
            - "3308:3306"
        volumes:
            - product_db_data:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pPass1234"]
            interval: 10s
            timeout: 5s
            retries: 5

    orders-db:
        image: mysql:8.0
        container_name: orders-db-container
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: orders_db
            MYSQL_USER: docker_user
            MYSQL_PASSWORD: Pass1234
        ports:
            - "3309:3306"
        volumes:
            - orders_db_data:/var/lib/mysql
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pPass1234"]
            interval: 10s
            timeout: 5s
            retries: 5

    auth-service:
        build: ./auth-service
        container_name: auth-service
        environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://auth-db:3306/auth_db
            SPRING_DATASOURCE_USERNAME: docker_user
            SPRING_DATASOURCE_PASSWORD: Pass1234
            JWT_SECRET: my_secret_key
        ports:
            - "8090:8090"
        depends_on:
            # auth-db: service_healthy
            - auth-db
            
    
    product-service:
        build: ./product-service
        container_name: product-service
        environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://product-db:3306/product_db
            SPRING_DATASOURCE_USERNAME: docker_user
            SPRING_DATASOURCE_PASSWORD: Pass1234
            JWT_SECRET: eyJhbGciOiJIUzI1NiJ9.ew0KICAic3ViIjogIjEyMzQ1Njc4OTAiLA0KICAibmFtZSI6ICJBbmlzaCBOYXRoIiwNCiAgImlhdCI6IDE1MTYyMzkwMjINCn0.Xe8Oy0Ksl84WAEs20K_Sn_GQboI8Bsg53yFTd3IkfuA
        ports:
            - "8081:8081"
        depends_on:
            # product-db: service_healthy
            # auth-service: service_started
            - product-db
            - auth-service

    order-service:
        build: ./order-service
        container_name: order-service
        environment:
            SPRING_DATASOURCE_URL: jdbc:mysql://orders-db:3306/orders_db
            SPRING_DATASOURCE_USERNAME: docker_user
            SPRING_DATASOURCE_PASSWORD: Pass1234
            JWT_SECRET: my_secret_key
            AUTH_SERVICE_URL: http://auth-service:8090
        ports:
            - "8082:8082"
        depends_on:
            # orders-db: service_healthy
            # product-service: service_started
            # auth-service: service_started
            - orders-db
            - product-service
            - auth-service


volumes:
    auth_db_data:
    product_db_data:
    orders_db_data: